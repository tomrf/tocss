//
// flexbox based "bootstrap-like" grid system with rows and cols
//

@import '../config/grid';
@import '../config/breakpoints';

// grid container / "row"
.o-grid {
  display: flex;
  flex-wrap: wrap;
}

// default auto col
.o-grid__col {
  display: flex;
  flex: 1 1 auto;
}

// dynamic grid columns
.o-grid__col--grow {
  flex: 1 0 0;
}

.o-grid__col--shrink {
  flex: 0 1 auto;
  width: auto;
}

// o-grid__col-[1..$grid-columns], + --offset-N, --order-N
@for $i from 1 through $grid-columns {
  .o-grid__col-#{$i} {
    display: flex;
    flex: 1 1 percentage(math.div($i, $grid-columns));
    max-width: percentage(math.div($i, $grid-columns));
  }
  .o-grid__col--offset-#{$i} {
    margin-left: percentage(math.div($i, $grid-columns));
  }
  .o-grid__col--order-#{$i} {
    order: $i;
  }
}

// o-grid__col-[breakpoint]-[1..$grid-columns], + --offset-N, --order-N
@each $breakpoint, $breakpoint-value in $breakpoints {
  @for $i from 1 through $grid-columns {
    .o-grid__col-#{$breakpoint}-#{$i} {
      flex: 0 0 percentage(math.div($i, $grid-columns));
      max-width: percentage(math.div($i, $grid-columns));
    }
    .o-grid__col-#{$breakpoint}--offset-#{$i} {
      margin-left: percentage(math.div($i, $grid-columns));
    }
    .o-grid__col-#{$breakpoint}--order-#{$i} {
      order: $i;
    }
  }
}

// breakpoints
@each $breakpoint, $breakpoint-value in $breakpoints {
  @media screen and (min-width: $breakpoint-value) {
    @for $i from 1 through $grid-columns {
      .o-grid__col-#{$breakpoint}-#{$i} {
        display: flex;
        flex-wrap: wrap;
        flex: 1 1 percentage(math.div($i, $grid-columns));
        max-width: percentage(math.div($i, $grid-columns));
      }
    }
  }
}

